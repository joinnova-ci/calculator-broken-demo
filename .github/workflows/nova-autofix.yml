name: Nova Auto-Fix

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main, development]
  workflow_dispatch:
    inputs:
      target_ref:
        description: "Git ref to fix (branch, tag, or SHA)"
        required: true
        default: "main"

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  auto-fix:
    name: Nova Auto-Fix Failing Tests
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event.workflow_run.conclusion == 'failure' && 
       github.event.workflow_run.head_branch != 'main')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target_ref || github.event.workflow_run.head_branch }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-py3.12-nova-${{ hashFiles('pyproject.toml') }}

      - name: Install Nova CI-Rescue
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Configure Git
        run: |
          git config user.name "nova-bot"
          git config user.email "nova-bot@github.com"

      - name: Run Nova Fix
        id: nova-fix
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Create a unique branch name
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          NOVA_BRANCH="nova/fix-$TIMESTAMP"
          echo "nova_branch=$NOVA_BRANCH" >> $GITHUB_OUTPUT

          # Run Nova with appropriate options
          nova fix . \
            --max-iters 3 \
            --timeout 600 \
            --junit-report nova-test-results.xml \
            --ci "pytest -v --tb=short" \
            || echo "Nova fix completed with status $?"

          # Check if Nova made any changes
          if git diff --quiet; then
            echo "No changes made by Nova"
            echo "changes_made=false" >> $GITHUB_OUTPUT
          else
            echo "changes_made=true" >> $GITHUB_OUTPUT
            
            # Create a new branch with the fixes
            git checkout -b "$NOVA_BRANCH"
            git add -A
            git commit -m "fix: auto-fix failing tests with Nova CI-Rescue
            
            - Applied automated fixes for test failures
            - Generated by Nova CI-Rescue v0.2.0
            - Max iterations: 3
            - Safety limits enforced
            
            [skip ci]"
            
            git push origin "$NOVA_BRANCH"
          fi

      - name: Run tests on fixed code
        if: steps.nova-fix.outputs.changes_made == 'true'
        id: verify-fix
        run: |
          pytest -v --tb=short --junitxml=fixed-test-results.xml || true

          # Check if tests pass now
          if pytest --tb=no -q; then
            echo "tests_pass=true" >> $GITHUB_OUTPUT
          else
            echo "tests_pass=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.nova-fix.outputs.changes_made == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.nova-fix.outputs.nova_branch }}
          title: "🤖 Nova Auto-Fix: Repair failing tests"
          body: |
            ## 🚀 Nova CI-Rescue Auto-Fix

            This PR was automatically generated by Nova CI-Rescue to fix failing tests.

            ### 📊 Fix Summary

            - **Trigger**: ${{ github.event_name == 'workflow_dispatch' && 'Manual trigger' || 'CI failure' }}
            - **Source Branch**: ${{ inputs.target_ref || github.event.workflow_run.head_branch }}
            - **Max Iterations**: 3
            - **Safety Limits**: Enforced (max 5 files, 40 lines)

            ### 🧪 Test Status

            ${{ steps.verify-fix.outputs.tests_pass == 'true' && '✅ **All tests now pass!**' || '⚠️ **Some tests still failing - manual review needed**' }}

            ### 📝 What Nova Did

            Nova analyzed the failing tests and applied automated fixes. Please review the changes carefully before merging.

            <details>
            <summary>View test reports</summary>

            - [Original test results](../actions/runs/${{ github.run_id }})
            - Test results after fix are attached as artifacts

            </details>

            ### ⚡ Quick Actions

            - Review the diff below
            - Check the test results
            - Merge if satisfied, or request changes

            ---

            *Generated by [Nova CI-Rescue](https://github.com/nova-solve/ci-auto-rescue) v0.2.0*
          labels: |
            nova-autofix
            automated
          assignees: ${{ github.actor }}
          reviewers: ${{ github.actor }}

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nova-fix-artifacts
          path: |
            nova-test-results.xml
            fixed-test-results.xml
            .nova/
          retention-days: 7

      - name: Comment on original PR
        if: steps.nova-fix.outputs.changes_made == 'true' && github.event_name != 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const novaBranch = '${{ steps.nova-fix.outputs.nova_branch }}';
            const testsPass = '${{ steps.verify-fix.outputs.tests_pass }}' === 'true';

            const comment = `## 🤖 Nova CI-Rescue Update

            Nova has analyzed the failing tests and ${testsPass ? 'successfully fixed them' : 'attempted fixes'}.

            **Branch**: \`${novaBranch}\`
            **Status**: ${testsPass ? '✅ All tests passing' : '⚠️ Some tests still failing'}

            A pull request has been created with the proposed fixes. Please review and merge if appropriate.

            [View the auto-fix PR →](../pulls?q=is:pr+is:open+head:${novaBranch})`;

            // Find the PR that triggered this
            const pulls = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${context.payload.workflow_run.head_branch}`
            });

            if (pulls.data.length > 0) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pulls.data[0].number,
                body: comment
              });
            }
